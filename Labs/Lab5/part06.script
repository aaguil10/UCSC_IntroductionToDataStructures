Script started on Tue 06 Nov 2012 12:32:40 PM PST
[?1034hbash-4.1$ exitvalgrind list2 foo bar[C[C[C[C[C[C[C[C[C[C[14Pmk list2.c
+ for CSOURCE in '$*'
+ cid + list2.c
+ checksource list2.c
++ echo list2.c
++ sed 's/\.c$//'
+ EXECBIN=list2
+ gcc -g -O0 -Wall -Wextra -std=gnu99 list2.c -o list2 -lm
list2.c: In function â€˜mainâ€™:
list2.c:13: warning: unused parameter â€˜argcâ€™
bash-4.1$ valgrind list2 foo bar
==20391== Memcheck, a memory error detector
==20391== Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.
==20391== Using Valgrind-3.6.0 and LibVEX; rerun with -h for copyright info
==20391== Command: list2 foo bar
==20391== 
==20391== Invalid write of size 8
==20391==    at 0x4005FA: main (list2.c:19)
==20391==  Address 0x4c23048 is 0 bytes after a block of size 8 alloc'd
==20391==    at 0x4A05FDE: malloc (vg_replace_malloc.c:236)
==20391==    by 0x4005B6: main (list2.c:16)
==20391== 
==20391== Invalid read of size 8
==20391==    at 0x40065C: main (list2.c:22)
==20391==  Address 0x4c23188 is 0 bytes after a block of size 8 alloc'd
==20391==    at 0x4A05FDE: malloc (vg_replace_malloc.c:236)
==20391==    by 0x4005B6: main (list2.c:16)
==20391== 
==20391== Invalid read of size 8
==20391==    at 0x40061E: main (list2.c:23)
==20391==  Address 0x4c23188 is 0 bytes after a block of size 8 alloc'd
==20391==    at 0x4A05FDE: malloc (vg_replace_malloc.c:236)
==20391==    by 0x4005B6: main (list2.c:16)
==20391== 
0x4c23180->node {word=0x7ff0005c9->[HOSTNAME=unix2.ic.ucsc.edu], link=0x4c23130}
==20391== Invalid read of size 8
==20391==    at 0x400650: main (list2.c:22)
==20391==  Address 0x4c23188 is 0 bytes after a block of size 8 alloc'd
==20391==    at 0x4A05FDE: malloc (vg_replace_malloc.c:236)
==20391==    by 0x4005B6: main (list2.c:16)
==20391== 
0x4c23130->node {word=(nil)->[(null)], link=0x4c230e0}
0x4c230e0->node {word=0x7ff0005c5->[bar], link=0x4c23090}
0x4c23090->node {word=0x7ff0005c1->[foo], link=0x4c23040}
0x4c23040->node {word=0x7ff0005bb->[list2], link=0x37aaa0fb88}
==20391== Invalid read of size 1
==20391==    at 0x37AAA4757C: vfprintf (in /lib64/libc-2.12.so)
==20391==    by 0x37AAA4EA29: printf (in /lib64/libc-2.12.so)
==20391==    by 0x40064B: main (list2.c:23)
==20391==  Address 0xc0012000029d5 is not stack'd, malloc'd or (recently) free'd
==20391== 
==20391== 
==20391== Process terminating with default action of signal 11 (SIGSEGV)
==20391==  General Protection Fault
==20391==    at 0x37AAA4757C: vfprintf (in /lib64/libc-2.12.so)
==20391==    by 0x37AAA4EA29: printf (in /lib64/libc-2.12.so)
==20391==    by 0x40064B: main (list2.c:23)
0x37aaa0fb88->node {word=0xc0012000029d5->[==20391== 
==20391== HEAP SUMMARY:
==20391==     in use at exit: 40 bytes in 5 blocks
==20391==   total heap usage: 5 allocs, 0 frees, 40 bytes allocated
==20391== 
==20391== LEAK SUMMARY:
==20391==    definitely lost: 32 bytes in 4 blocks
==20391==    indirectly lost: 0 bytes in 0 blocks
==20391==      possibly lost: 0 bytes in 0 blocks
==20391==    still reachable: 8 bytes in 1 blocks
==20391==         suppressed: 0 bytes in 0 blocks
==20391== Rerun with --leak-check=full to see details of leaked memory
==20391== 
==20391== For counts of detected and suppressed errors, rerun with: -v
==20391== ERROR SUMMARY: 21 errors from 5 contexts (suppressed: 6 from 6)
Segmentation fault (core dumped)
bash-4.1$ gb[Kdb list2
[?1034hGNU gdb (GDB) Red Hat Enterprise Linux (7.2-50.el6)
Copyright (C) 2010 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /afs/cats.ucsc.edu/users/n/aaguil10/Documents/CMPS12B/Labs/Lab5/list2...done.
(gdb) run foo bar
Starting program: /afs/cats.ucsc.edu/users/n/aaguil10/Documents/CMPS12B/Labs/Lab5/list2 foo bar
0x601090->node {word=0x7fffffffe600->[HOSTNAME=unix2.ic.ucsc.edu], link=0x601070}
0x601070->node {word=(nil)->[(null)], link=0x601050}
0x601050->node {word=0x7fffffffe5fc->[bar], link=0x601030}
0x601030->node {word=0x7fffffffe5f8->[foo], link=0x601010}
0x601010->node {word=0x7fffffffe5b2->[/afs/cats.ucsc.edu/users/n/aaguil10/Documents/CMPS12B/Labs/Lab5/list2], link=0x37aaa0fb88}

Program received signal SIGSEGV, Segmentation fault.
0x00000037aaa4757c in vfprintf () from /lib64/libc.so.6
Missing separate debuginfos, use: debuginfo-install glibc-2.12-1.47.el6_2.12.x86_64
(gdb) where
#0  0x00000037aaa4757c in vfprintf () from /lib64/libc.so.6
#1  0x00000037aaa4ea2a in printf () from /lib64/libc.so.6
#2  0x000000000040064c in main (argc=3, argv=0x7fffffffe328) at list2.c:23
(gdb) list
6	
7	typedef struct node *node_ref;
8	struct node {
9	   char *word;
10	   node_ref link;
11	};
12	
13	int main (int argc, char **argv) {
14	   node_ref head;
15	   for (int argi = 0; argi < 5; ++argi) {
(gdb) list list2.c:23
18	      node->word = argv[argi];
19	      node->link = head;
20	      head = node;
21	   }
22	   for (node_ref curr = head; curr->link != NULL; curr = curr->link) {
23	      printf ("%p->node {word=%p->[%s], link=%p}\n",
24	              curr, curr->word, curr->word, curr->link);
25	   }
26	   return 9;
27	}
(gdb) print head
No symbol "head" in current context.
(gdb) bt
#0  0x00000037aaa4757c in vfprintf () from /lib64/libc.so.6
#1  0x00000037aaa4ea2a in printf () from /lib64/libc.so.6
#2  0x000000000040064c in main (argc=3, argv=0x7fffffffe328) at list2.c:23
(gdb) up
#1  0x00000037aaa4ea2a in printf () from /lib64/libc.so.6
(gdb) up
#2  0x000000000040064c in main (argc=3, argv=0x7fffffffe328) at list2.c:23
23	      printf ("%p->node {word=%p->[%s], link=%p}\n",
(gdb) up
Initial frame selected; you cannot go up.
(gdb) print *([K[Khead
$1 = (node_ref) 0x601090
(gdb) print *head
$2 = {word = 0x7fffffffe600 "HOSTNAME=unix2.ic.ucsc.edu", link = 0x601070}
(gdb) print *(head->word)
$3 = 72 'H'
(gdb) print head-.link->[1Plink->>link->[C[C[C[C[C[Clink->link
$4 = (node_ref) 0x601030
(gdb) print*[K *(head->lim[Knk->link->link)
$5 = {word = 0x7fffffffe5f8 "foo", link = 0x601010}
(gdb) quit
A debugging session is active.

	Inferior 1 [process 20460] will be killed.

Quit anyway? (y or n) y
bash-4.1$ exit
exit

Script done on Tue 06 Nov 2012 12:38:46 PM PST
