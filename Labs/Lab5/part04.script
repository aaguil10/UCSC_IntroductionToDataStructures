Script started on Tue 06 Nov 2012 12:13:53 PM PST
[?1034hbash-4.1$ valgrind malloc
==18205== Memcheck, a memory error detector
==18205== Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.
==18205== Using Valgrind-3.6.0 and LibVEX; rerun with -h for copyright info
==18205== Command: malloc
==18205== 
0x4c23090-> {6, (nil)}
==18205== 
==18205== HEAP SUMMARY:
==18205==     in use at exit: 16 bytes in 1 blocks
==18205==   total heap usage: 2 allocs, 1 frees, 32 bytes allocated
==18205== 
==18205== LEAK SUMMARY:
==18205==    definitely lost: 16 bytes in 1 blocks
==18205==    indirectly lost: 0 bytes in 0 blocks
==18205==      possibly lost: 0 bytes in 0 blocks
==18205==    still reachable: 0 bytes in 0 blocks
==18205==         suppressed: 0 bytes in 0 blocks
==18205== Rerun with --leak-check=full to see details of leaked memory
==18205== 
==18205== For counts of detected and suppressed errors, rerun with: -v
==18205== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
bash-4.1$ gdb malloc
[?1034hGNU gdb (GDB) Red Hat Enterprise Linux (7.2-50.el6)
Copyright (C) 2010 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /afs/cats.ucsc.edu/users/n/aaguil10/Documents/CMPS12B/Labs/Lab5/malloc...done.
(gdb) break main
Breakpoint 1 at 0x400594: file malloc.c, line 13.
(gdb) run
Starting program: /afs/cats.ucsc.edu/users/n/aaguil10/Documents/CMPS12B/Labs/Lab5/malloc 

Breakpoint 1, main (argc=1, argv=0x7fffffffe338) at malloc.c:13
13	   node_ref ptr = malloc (sizeof (struct node));
Missing separate debuginfos, use: debuginfo-install glibc-2.12-1.47.el6_2.12.x86_64
(gdb) print ptr
$1 = (node_ref) 0x4004a0
(gdb) print *ptr
$2 = {value = -1991643855, link = 0x495450f0e48348e2}
(gdb) step
14	   ptr = malloc (sizeof (struct node));
(gdb) print ptr
$3 = (node_ref) 0x601010
(gdb) print *ptr
$4 = {value = 0, link = 0x0}
(gdb) step
15	   ptr->value = 6;
(gdb) step
16	   ptr->link = NULL;
(gdb) step
17	   printf ("%p-> {%d, %p}\n", ptr, ptr->value, ptr->link);
(gdb) print ptr
$5 = (node_ref) 0x601030
(gdb) print *ptr
$6 = {value = 6, link = 0x0}
(gdb) step
0x601030-> {6, (nil)}
18	   free (ptr);
(gdb) step
19	   return EXIT_SUCCESS;
(gdb) step
20	}
(gdb) step
0x00000037aaa1ecdd in __libc_start_main () from /lib64/libc.so.6
(gdb) quit
A debugging session is active.

	Inferior 1 [process 18240] will be killed.

Quit anyway? (y or n) y
bash-4.1$ exit
exit

Script done on Tue 06 Nov 2012 12:17:14 PM PST
